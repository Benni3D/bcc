#!/usr/bin/env bash

bcl="$(basename "$0")"

if [ "${bcl}" != "bcl" ]; then
   target="$(basename "$0" bcl)"
else
   target=""
fi

# TODO: change gcc to ld
BCC="${target}bcc"
LD="${target}gcc"

args=$(getopt -o "gsVcAiSEwhCe:I:D:U:O:d:l:L:o:" -- "$@") || exit 1
eval set -- "${args}"
unset args

output_file=""
bcc_options="-c -nostdlib"
ld_options=""
linking=yes

while true; do
   case "$1" in
   -c|-A|-i|-S|-E)
      linking=no
      bcc_options="${bcc_options} $1"
      shift
      ;;
   -w|-C)
      bcc_options="${bcc_options} $1"
      shift
      ;;
   -o)
      output_file="$2"
      shift 2
      ;;
   -e|-I|-D|-U|-O|-d)
      bcc_options="${bcc_options} $1$2"
      shift 2
      ;;
   -l|-L)
      ld_options="${ld_options} $1$2"
      shift 2
      ;;
   -s|-g)
      ld_options="${ld_options} $1"
      shift
      ;;
   -h|-V)
      "${target}bcc" -h
      exit
      ;;
   --)
      shift
      break
      ;;
   *)
      printf "bcl: invalid option '%s'\n" "$1" >&2
      exit 1
   esac
done

[ -z "$1" ] && echo "Usage: ${target}bcl [options] file" >&2 && exit 1
file="$1"

if [ "${linking}" = "yes" ]; then
   [ -z "${output_file}" ] && output_file="a.out"
   "${BCC}" ${bcc_options} -o tmp.o "${file}" || exit 1
   "${LD}" -o "${output_file}" tmp.o ${ld_options}
   [ $? -ne 0 ] && rm -f tmp.o && exit 1
   rm -f tmp.o
else
   [ -n "${output_file}" ] && bcc_options="${bcc_options} -o ${output_file}"
   "${BCC}" ${bcc_options} "${file}" || exit 1
fi
